version: '3.9'

services:
  react:
    container_name: react
    build:
      context: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app  # 로컬 코드와 컨테이너 코드 동기화
      - /app/node_modules  # node_modules를 컨테이너 내부에서 관리
    environment:
      - VITE_DEV_SERVER_HMR_HOST=host.docker.internal # Docker 호스트에 연결
      - VITE_DEV_SERVER_HMR_PORT=3000                # WebSocket 포트 설정
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    command: >
      sh -c "yarn install && yarn vite --host 0.0.0.0"

  django:
    container_name: django
    build:
      context: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app  # 로컬 코드와 컨테이너 코드 동기화
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=TradeVortex.settings
      - DATABASE_URL=postgres://postgres:postgres@psql:5432/tradevortex
    depends_on:
#      psql:
#        condition: service_healthy
      pgadmin:
        condition: service_started
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      uvicorn TradeVortex.asgi:application --host 0.0.0.0 --port 8000 --reload
      "

#  psql:
#    image: postgres:16  # ✅ 공식 PostgreSQL 이미지 사용
#    container_name: psql
#    restart: unless-stopped
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: tradevortex
#    volumes:
#      - ./postgres_data:/var/lib/postgresql/data  # ✅ 볼륨 설정
#    healthcheck:  # ✅ Healthcheck 추가
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com  # 로그인 이메일
      PGADMIN_DEFAULT_PASSWORD: admin        # 로그인 비밀번호
    ports:
      - "5050:80"  # pgAdmin 웹 UI에 접근할 포트
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json  # 초기 서버 설정 파일 마운트
#    depends_on:
#      psql:
#        condition: service_healthy

volumes:
#  postgresql_data:  # ✅ PostgreSQL 데이터 저장
  pgadmin_data:  # ✅ pgAdmin 데이터 저장
